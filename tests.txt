CMDS: 1@0x3 2@0x5
add x3, x1, x2
OUTS: 1@0x3 2@0x5 3@0x8

CMDS: 1@0x7 2@0x4 3@0x0
sub x3, x1, x2
OUTS: 1@0x7 2@0x4 3@0x3

CMDS: 1@0xF 2@0xA 3@0x0
and x3, x1, x2
OUTS: 1@0xF 2@0xA 3@0xA

CMDS: 1@0x3 2@0x5 3@0x0
slt x3, x1, x2
OUTS: 1@0x3 2@0x5 3@0x1

CMDS: 1@0x1 2@0x2 3@0x0
sll x3, x1, x2
OUTS: 1@0x1 2@0x2 3@0x4

CMDS: 1@0x10 2@0x1 3@0x0
sra x3, x1, x2
OUTS: 1@0x10 2@0x1 3@0x8

CMDS: 1@0x5 3@0x0
addi x3, x1, 4
OUTS: 1@0x5 3@0x9

CMDS: 1@0xF 3@0x0
andi x3, x1, 0xA
OUTS: 1@0xF 3@0xA

CMDS: 1@0x100 3@0x1
sd x1, 0(x3)
ld x2, 0(x3)
OUTS: 1@0x100 3@0x1 2@0x100

CMDS: 1@0x5 3@0x1
sb x1, 0(x3)
lb x2, 0(x3)
OUTS: 1@0x5 3@0x1 2@0x5

CMDS: 1@0x700 3@0x1
sw x1, 0(x3)
lw x2, 0(x3)
OUTS: 1@0x700 3@0x1 2@0x700

CMDS:
lui x3, 0xF
OUTS: 3@0xF000

CMDS: 1@0x1 2@0x2
label: 
addi x1, x1, 0x1
beq x1, x2, label
OUTS: 1@0x3 2@0x2

CMDS: 1@0x1 2@0x2 3@0x0
label: 
addi x1, x1, 0x1
beq x1, x3, label
OUTS: 1@0x2 2@0x2

CMDS: 1@0x5 2@0x3 4@0x100 5@0x50 6@0x1 8@0x10 10@0xFF
lui x7, 0xABC            #Set x7 to 0xABC000
addi x3, x1, 0xA         #x3 = x1 + 0xA (x3 = 5 + 10 = 15)
and x9, x3, x2           #x9 = x3 & x2 (x9 = 15 & 3 = 3)
sll x5, x5, 1            #x5 = x5 << 1 (x5 = 0x50 << 1 = 0xA0)
sw x5, 4(x4)             #Store x5 at memory address (x4 + 4) (i.e., 0x100 + 4 = 0x104)
sub x10, x7, x10         #x10 = x7 - x10 (x10 = 0xABC000 - 0xFF = 0xABBF01)
beq x1, x2, skip         #Branch if x1 == x2 (x1 = 5, x2 = 3, no branch)
addi x8, x8, -8          #x8 = x8 - 8 (x8 = 0x10 - 8 = 0x8)

skip:
OUTS: 1@0x5 2@0x3 3@0xF 4@0x100 5@0xA0 6@0x1 7@0xABC000 8@0x8 9@0x3 10@0xABBF01
